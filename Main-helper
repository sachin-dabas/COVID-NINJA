# import libraries
from cmu_112_graphics import *
import random
# import math
# from dataclasses import make_dataclass


#make a cover
#make viruses
def appStarted(app):
    app.score = 0
    app.timerDelay = 50
    app.virusShape = [
                        [20,20,10,'red'],
                        [30,40,20,'green']
                     ]
    app.virusType = [
        'Pathogen',
        'Virus'
    ]
    app.dx = random.choice([+1,-1])*random.randint(3,6)
    app.dy = random.choice([+1,-1])*random.randint(3,6)
    initVirus(app)

def initVirus(app):
    app.viruses = [ ]
    # randomizeVirus(app)
    (shape,type) = getRandomVirus(app)
    (app.x,app.y,app.r,app.color) = (shape[0],shape[1],shape[2],shape[3])

def getRandomVirus(app):
    n = random.randint(0,1)
    return(app.virusShape[n],app.virusType[n])

# def randomizeVirus(app):
#     #! return app.x and etc
#     app.x = random.randint(20, app.width-20)
#     app.y = random.randint(20, app.height-20)
#     app.color = random.choice(['red', 'orange', 'yellow', 'green', 'blue'])
#     #! change this

def keyPressed(app,event):
    pass

def timerFired(app):
    moveVirus(app)

def mousePressed(app, event):
    #! write logic
    #? distance between 
    d = ((app.x - event.x)**2 + (app.y - event.y)**2)**0.5
    if (d <= app.r):
        app.score += 1
        getRandomVirus(app)
    elif (app.score > 0):
        app.score -= 1

def moveVirus(app):
    #! write logic
    app.x += app.dx
    if (app.x < 0) or (app.x > app.width): app.dx = -app.dx
    app.y += app.dy
    if (app.y < 0) or (app.y > app.height): app.dy = -app.dy

def redrawAll(app,canvas):
    canvas.create_text(app.width//2,app.height//2, text = "Battle of Pathogens",
                             font = 'Arial 25 bold', fill='brown')
    canvas.create_text(app.width//2+ 100,app.height//2+100, text = "Press Enter",
                             font = 'Arial 12 bold', fill='brown')
    canvas.create_oval(app.x-app.r, app.y-app.r, app.x+app.r, app.y+app.r,
                       fill=app.color)
    canvas.create_text(app.height-100,30,text = f'{app.score}',fill = 'black')
# This runs the app
runApp(width=600, height=600)















